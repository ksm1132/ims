# PostgreSQL
spring.datasource.url=jdbc:postgresql://${POSTGRES_ENDPOINT}:5432/${POSTGRES_DB}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${POSTGRES_PASSWORD}

# SQL
spring.sql.init.mode=never

# PostgreSQL??SQL?????????schema.sql?data.sql??????
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql


# log
logging.level.root=info
logging.level.org.springframework=DEBUG
logging.level.com.ims.inventorymgmtsys=DEBUG
#logging.config=classpath:log4j2.xml


spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid, profile, email
spring.security.oauth2.client.registration.google.redirect-uri=https://${myappDomain}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_ADDRESS}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.debug=true

# Forwarded headers strategy
server.forward-headers-strategy=framework

server.use-forward-headers=true

# same-site
server.servlet.session.cookie.same-site=None
